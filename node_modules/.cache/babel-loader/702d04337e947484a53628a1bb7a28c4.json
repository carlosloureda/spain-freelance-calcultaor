{"ast":null,"code":"import _slicedToArray from \"/project/spain-freelance-calcultaor/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/project/spain-freelance-calcultaor/src/App.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport React from \"react\"; // 12 months -> 45€/h. | 11 months -> 48.3\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar MONTHS_IN_YEAR = 11;\nvar CUOTA_SS_MINIMA_2021 = 289;\nvar CUOTA_SS_MAXIMA_2021 = 1245.45;\n\nvar IRPFAnual = function IRPFAnual() {\n  _s();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anualIrpf = _React$useState2[0],\n      setAnualIrpf = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      brutAnual = _React$useState4[0],\n      setBrutAnual = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      brutHour = _React$useState6[0],\n      setBrutHour = _React$useState6[1];\n\n  var _React$useState7 = React.useState(0),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      anualNet = _React$useState8[0],\n      setAnualNet = _React$useState8[1]; //   De 0,00 € a 12.450,00 € =  retención de 19 %\n  // De 12.450,00 € a 20.200,00 € =  retención de 24 %\n  // De 20.200,00 € a 35.200,00 € =  retención de 30 %\n  // De 35.200,00 € a 60.000,00 € = retención de 37 %\n  // De 60.000,01 € a superiores = retención de 45 %\n\n\n  var calculateTramoIrpf = function calculateTramoIrpf(anualBrut) {\n    if (anualBrut < 12500) return 12500 * 0.19;\n\n    if (anualBrut < 20200) {\n      return 12450 * 0.19 + (anualBrut - 12450) * 0.24;\n    }\n\n    if (anualBrut < 35200) {\n      return 12450 * 0.19 + (20200 - 12450) * 0.24 + (anualBrut - 20200) * 0.3;\n    }\n\n    if (anualBrut < 60000) {\n      return 12450 * 0.19 + (20200 - 12450) * 0.24 + (35200 - 20200) * 0.3 + (anualBrut - 35200) * 0.37;\n    }\n\n    return 12450 * 0.19 + (20200 - 12450) * 0.24 + (35200 - 20200) * 0.3 + (60000 - 35200) * 0.37 + (anualBrut - 60000) * 0.45;\n  };\n\n  var round = function round(num) {\n    return Math.round(num * 100) / 100;\n  };\n\n  var onSubmit = function onSubmit(e) {\n    e.preventDefault();\n    if (!brutAnual) return;\n    var irpf = calculateTramoIrpf(brutAnual);\n    setAnualIrpf(irpf);\n    setAnualNet(brutAnual - irpf);\n  };\n\n  var onBrutAnualUpdate = function onBrutAnualUpdate(e) {\n    setBrutAnual(e.target.value);\n    setBrutHour(round(e.target.value / (8 * 5 * 4 * MONTHS_IN_YEAR)));\n    setAnualIrpf(0);\n    setAnualNet(0);\n  };\n\n  var onBrutMonthUpdate = function onBrutMonthUpdate(e) {\n    setBrutHour(e.target.value);\n    setBrutAnual(e.target.value * 8 * 5 * 4 * MONTHS_IN_YEAR);\n    setAnualIrpf(0);\n    setAnualNet(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"brutAnual\",\n        children: \"Bruto Anual: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: brutAnual,\n        name: \"brutAnual\",\n        onChange: onBrutAnualUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"brutHour\",\n        children: \"Bruto Hora: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: brutHour,\n        name: \"brutHour\",\n        onChange: onBrutMonthUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Monthly Brut: \", !!brutAnual && round(brutAnual / MONTHS_IN_YEAR)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Anual IRPF: \", !!anualIrpf && round(anualIrpf) * -1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Anual Net (No SS): \", !!anualNet && round(anualNet)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Anual Net: \", !!anualNet && round(anualNet - 12 * CUOTA_SS_MINIMA_2021)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Monthly Net (No SS): \", !!anualNet && round(anualNet / MONTHS_IN_YEAR)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Monthly Net:\", \" \", !!anualNet && round(anualNet / MONTHS_IN_YEAR - CUOTA_SS_MINIMA_2021)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cuota menusal SS: \", CUOTA_SS_MINIMA_2021]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !brutAnual,\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(IRPFAnual, \"2ZgNZW8ubxvRU+XemLc573aF9oI=\");\n\n_c = IRPFAnual;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello CodeSandbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IRPFAnual, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IRPFAnual\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","MONTHS_IN_YEAR","CUOTA_SS_MINIMA_2021","CUOTA_SS_MAXIMA_2021","IRPFAnual","useState","anualIrpf","setAnualIrpf","brutAnual","setBrutAnual","brutHour","setBrutHour","anualNet","setAnualNet","calculateTramoIrpf","anualBrut","round","num","Math","onSubmit","e","preventDefault","irpf","onBrutAnualUpdate","target","value","onBrutMonthUpdate","App"],"sources":["/project/spain-freelance-calcultaor/src/App.tsx"],"sourcesContent":["import \"./styles.css\";\nimport React from \"react\";\n\n// 12 months -> 45€/h. | 11 months -> 48.3\nconst MONTHS_IN_YEAR = 11;\n\nconst CUOTA_SS_MINIMA_2021 = 289;\nconst CUOTA_SS_MAXIMA_2021 = 1245.45;\n\nconst IRPFAnual = () => {\n  const [anualIrpf, setAnualIrpf] = React.useState<number>(0);\n  const [brutAnual, setBrutAnual] = React.useState<number>(0);\n  const [brutHour, setBrutHour] = React.useState<number>(0);\n  const [anualNet, setAnualNet] = React.useState<number>(0);\n  //   De 0,00 € a 12.450,00 € =  retención de 19 %\n  // De 12.450,00 € a 20.200,00 € =  retención de 24 %\n  // De 20.200,00 € a 35.200,00 € =  retención de 30 %\n  // De 35.200,00 € a 60.000,00 € = retención de 37 %\n  // De 60.000,01 € a superiores = retención de 45 %\n  const calculateTramoIrpf = (anualBrut: number) => {\n    if (anualBrut < 12500) return 12500 * 0.19;\n    if (anualBrut < 20200) {\n      return 12450 * 0.19 + (anualBrut - 12450) * 0.24;\n    }\n    if (anualBrut < 35200) {\n      return 12450 * 0.19 + (20200 - 12450) * 0.24 + (anualBrut - 20200) * 0.3;\n    }\n    if (anualBrut < 60000) {\n      return (\n        12450 * 0.19 +\n        (20200 - 12450) * 0.24 +\n        (35200 - 20200) * 0.3 +\n        (anualBrut - 35200) * 0.37\n      );\n    }\n\n    return (\n      12450 * 0.19 +\n      (20200 - 12450) * 0.24 +\n      (35200 - 20200) * 0.3 +\n      (60000 - 35200) * 0.37 +\n      (anualBrut - 60000) * 0.45\n    );\n  };\n  const round = (num: number) => Math.round(num * 100) / 100;\n\n  const onSubmit = (e: any) => {\n    e.preventDefault();\n    if (!brutAnual) return;\n    const irpf = calculateTramoIrpf(brutAnual);\n    setAnualIrpf(irpf);\n    setAnualNet(brutAnual - irpf);\n  };\n  const onBrutAnualUpdate = (e: any) => {\n    setBrutAnual(e.target.value);\n    setBrutHour(round(e.target.value / (8 * 5 * 4 * MONTHS_IN_YEAR)));\n    setAnualIrpf(0);\n    setAnualNet(0);\n  };\n\n  const onBrutMonthUpdate = (e: any) => {\n    setBrutHour(e.target.value);\n    setBrutAnual(e.target.value * 8 * 5 * 4 * MONTHS_IN_YEAR);\n    setAnualIrpf(0);\n    setAnualNet(0);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        <label htmlFor=\"brutAnual\">Bruto Anual: </label>\n        <input\n          type=\"text\"\n          value={brutAnual}\n          name=\"brutAnual\"\n          onChange={onBrutAnualUpdate}\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"brutHour\">Bruto Hora: </label>\n        <input\n          type=\"text\"\n          value={brutHour}\n          name=\"brutHour\"\n          onChange={onBrutMonthUpdate}\n        />\n      </div>\n\n      <p>Monthly Brut: {!!brutAnual && round(brutAnual / MONTHS_IN_YEAR)}</p>\n      <p>\n        <strong>Anual IRPF: {!!anualIrpf && round(anualIrpf) * -1}</strong>\n      </p>\n      <p>\n        <strong>Anual Net (No SS): {!!anualNet && round(anualNet)}</strong>\n      </p>\n      <p>\n        <strong>\n          Anual Net: {!!anualNet && round(anualNet - 12 * CUOTA_SS_MINIMA_2021)}\n        </strong>\n      </p>\n      <p>\n        <strong>\n          Monthly Net (No SS): {!!anualNet && round(anualNet / MONTHS_IN_YEAR)}\n        </strong>\n      </p>\n      <p>\n        <strong>\n          Monthly Net:{\" \"}\n          {!!anualNet &&\n            round(anualNet / MONTHS_IN_YEAR - CUOTA_SS_MINIMA_2021)}\n        </strong>\n      </p>\n      <p>Cuota menusal SS: {CUOTA_SS_MINIMA_2021}</p>\n      <button type=\"submit\" disabled={!brutAnual}>\n        Calculate\n      </button>\n    </form>\n  );\n};\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Hello CodeSandbox</h1>\n      <IRPFAnual />\n    </div>\n  );\n}\n"],"mappings":";;;;;;AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;;AACA,IAAMC,cAAc,GAAG,EAAvB;AAEA,IAAMC,oBAAoB,GAAG,GAA7B;AACA,IAAMC,oBAAoB,GAAG,OAA7B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;EAAA;;EACtB,sBAAkCJ,KAAK,CAACK,QAAN,CAAuB,CAAvB,CAAlC;EAAA;EAAA,IAAOC,SAAP;EAAA,IAAkBC,YAAlB;;EACA,uBAAkCP,KAAK,CAACK,QAAN,CAAuB,CAAvB,CAAlC;EAAA;EAAA,IAAOG,SAAP;EAAA,IAAkBC,YAAlB;;EACA,uBAAgCT,KAAK,CAACK,QAAN,CAAuB,CAAvB,CAAhC;EAAA;EAAA,IAAOK,QAAP;EAAA,IAAiBC,WAAjB;;EACA,uBAAgCX,KAAK,CAACK,QAAN,CAAuB,CAAvB,CAAhC;EAAA;EAAA,IAAOO,QAAP;EAAA,IAAiBC,WAAjB,uBAJsB,CAKtB;EACA;EACA;EACA;EACA;;;EACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,SAAD,EAAuB;IAChD,IAAIA,SAAS,GAAG,KAAhB,EAAuB,OAAO,QAAQ,IAAf;;IACvB,IAAIA,SAAS,GAAG,KAAhB,EAAuB;MACrB,OAAO,QAAQ,IAAR,GAAe,CAACA,SAAS,GAAG,KAAb,IAAsB,IAA5C;IACD;;IACD,IAAIA,SAAS,GAAG,KAAhB,EAAuB;MACrB,OAAO,QAAQ,IAAR,GAAe,CAAC,QAAQ,KAAT,IAAkB,IAAjC,GAAwC,CAACA,SAAS,GAAG,KAAb,IAAsB,GAArE;IACD;;IACD,IAAIA,SAAS,GAAG,KAAhB,EAAuB;MACrB,OACE,QAAQ,IAAR,GACA,CAAC,QAAQ,KAAT,IAAkB,IADlB,GAEA,CAAC,QAAQ,KAAT,IAAkB,GAFlB,GAGA,CAACA,SAAS,GAAG,KAAb,IAAsB,IAJxB;IAMD;;IAED,OACE,QAAQ,IAAR,GACA,CAAC,QAAQ,KAAT,IAAkB,IADlB,GAEA,CAAC,QAAQ,KAAT,IAAkB,GAFlB,GAGA,CAAC,QAAQ,KAAT,IAAkB,IAHlB,GAIA,CAACA,SAAS,GAAG,KAAb,IAAsB,IALxB;EAOD,CAxBD;;EAyBA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,GAAD;IAAA,OAAiBC,IAAI,CAACF,KAAL,CAAWC,GAAG,GAAG,GAAjB,IAAwB,GAAzC;EAAA,CAAd;;EAEA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAY;IAC3BA,CAAC,CAACC,cAAF;IACA,IAAI,CAACb,SAAL,EAAgB;IAChB,IAAMc,IAAI,GAAGR,kBAAkB,CAACN,SAAD,CAA/B;IACAD,YAAY,CAACe,IAAD,CAAZ;IACAT,WAAW,CAACL,SAAS,GAAGc,IAAb,CAAX;EACD,CAND;;EAOA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACH,CAAD,EAAY;IACpCX,YAAY,CAACW,CAAC,CAACI,MAAF,CAASC,KAAV,CAAZ;IACAd,WAAW,CAACK,KAAK,CAACI,CAAC,CAACI,MAAF,CAASC,KAAT,IAAkB,IAAI,CAAJ,GAAQ,CAAR,GAAYxB,cAA9B,CAAD,CAAN,CAAX;IACAM,YAAY,CAAC,CAAD,CAAZ;IACAM,WAAW,CAAC,CAAD,CAAX;EACD,CALD;;EAOA,IAAMa,iBAAiB,GAAG,SAApBA,iBAAoB,CAACN,CAAD,EAAY;IACpCT,WAAW,CAACS,CAAC,CAACI,MAAF,CAASC,KAAV,CAAX;IACAhB,YAAY,CAACW,CAAC,CAACI,MAAF,CAASC,KAAT,GAAiB,CAAjB,GAAqB,CAArB,GAAyB,CAAzB,GAA6BxB,cAA9B,CAAZ;IACAM,YAAY,CAAC,CAAD,CAAZ;IACAM,WAAW,CAAC,CAAD,CAAX;EACD,CALD;;EAOA,oBACE;IAAM,QAAQ,EAAEM,QAAhB;IAAA,wBACE;MAAA,wBACE;QAAO,OAAO,EAAC,WAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,SADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,KAAK,EAAEX,SAFT;QAGE,IAAI,EAAC,WAHP;QAIE,QAAQ,EAAEe;MAJZ;QAAA;QAAA;QAAA;MAAA,SAFF;IAAA;MAAA;MAAA;MAAA;IAAA,SADF,eAWE;MAAA,wBACE;QAAO,OAAO,EAAC,UAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,SADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,KAAK,EAAEb,QAFT;QAGE,IAAI,EAAC,UAHP;QAIE,QAAQ,EAAEgB;MAJZ;QAAA;QAAA;QAAA;MAAA,SAFF;IAAA;MAAA;MAAA;MAAA;IAAA,SAXF,eAqBE;MAAA,6BAAkB,CAAC,CAAClB,SAAF,IAAeQ,KAAK,CAACR,SAAS,GAAGP,cAAb,CAAtC;IAAA;MAAA;MAAA;MAAA;IAAA,SArBF,eAsBE;MAAA,uBACE;QAAA,2BAAqB,CAAC,CAACK,SAAF,IAAeU,KAAK,CAACV,SAAD,CAAL,GAAmB,CAAC,CAAxD;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,SAtBF,eAyBE;MAAA,uBACE;QAAA,kCAA4B,CAAC,CAACM,QAAF,IAAcI,KAAK,CAACJ,QAAD,CAA/C;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,SAzBF,eA4BE;MAAA,uBACE;QAAA,0BACc,CAAC,CAACA,QAAF,IAAcI,KAAK,CAACJ,QAAQ,GAAG,KAAKV,oBAAjB,CADjC;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,SA5BF,eAiCE;MAAA,uBACE;QAAA,oCACwB,CAAC,CAACU,QAAF,IAAcI,KAAK,CAACJ,QAAQ,GAAGX,cAAZ,CAD3C;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,SAjCF,eAsCE;MAAA,uBACE;QAAA,2BACe,GADf,EAEG,CAAC,CAACW,QAAF,IACCI,KAAK,CAACJ,QAAQ,GAAGX,cAAX,GAA4BC,oBAA7B,CAHT;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,SAtCF,eA6CE;MAAA,iCAAsBA,oBAAtB;IAAA;MAAA;MAAA;MAAA;IAAA,SA7CF,eA8CE;MAAQ,IAAI,EAAC,QAAb;MAAsB,QAAQ,EAAE,CAACM,SAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,SA9CF;EAAA;IAAA;IAAA;IAAA;EAAA,SADF;AAoDD,CA9GD;;GAAMJ,S;;KAAAA,S;AAgHN,eAAe,SAASuB,GAAT,GAAe;EAC5B,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;MAPuBA,G"},"metadata":{},"sourceType":"module"}